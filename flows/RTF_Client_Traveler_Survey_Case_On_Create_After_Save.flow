<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Error_Email</name>
        <label>Send Error Email</label>
        <locationX>2074</locationX>
        <locationY>431</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>jhintz@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Error Sending Email to Traveler After Low NPS Score</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>ErrorEmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>We send an email from Salesforce Support to the Shared Mailbox selected by the Region decision element. Account Owner&apos;s are included in this email as well.</description>
        <name>Send_New_Case_Email_Alert</name>
        <label>Send New Case Email Alert</label>
        <locationX>710</locationX>
        <locationY>1163</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>{!EmailRecipientMailbox}, {!AccountOwnerEmail}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>salesforcesupport@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>ACTION REQUIRED - Client Traveler Survey Low Net Promoter Score Alert</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Canada_East_Mailbox_Assignment</name>
        <label>Canada East Mailbox Assignment</label>
        <locationX>842</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>EmailRecipientMailbox</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>SurveyAlertCAE@dt.com</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Account_Field_Information</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Canada_West_Mailbox_Assignment</name>
        <label>Canada West Mailbox Assignment</label>
        <locationX>1106</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>EmailRecipientMailbox</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>SurveyAlertCAW@dt.com</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Account_Field_Information</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Central_Mailbox_Assignment</name>
        <label>Central Mailbox Assignment</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>EmailRecipientMailbox</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>SurveyAlertCentral@dt.com</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Account_Field_Information</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>East_Mailbox_Assignment</name>
        <label>East Mailbox Assignment</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>EmailRecipientMailbox</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>SurveyAlertEast@dt.com</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Account_Field_Information</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>West_Mailbox_Assignment</name>
        <label>West Mailbox Assignment</label>
        <locationX>578</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>EmailRecipientMailbox</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>SurveyAlertWest@dt.com</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Account_Field_Information</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>We only care about one record type in this flow: Client Traveler Survey. We assess the Case record that launched the flow to see if it is a Client Traveler Survey Case record. If the current Case record that launched the flow is any other record type, the flow ends, and no action is taken.</description>
        <name>Assess_Case_Record_Type</name>
        <label>Assess Case Record Type</label>
        <locationX>1260</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Client_Traveler_Survey_Record_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_Case_Record_Type.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Account_Region</targetReference>
            </connector>
            <label>Client Traveler Survey Record Type</label>
        </rules>
    </decisions>
    <decisions>
        <description>Here we evaluate the Region of the Case&apos;s related Account so that we can determine which shared mailbox to send an alert to.</description>
        <name>Evaluate_Account_Region</name>
        <label>Evaluate Account Region</label>
        <locationX>710</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Get_Account_Field_Information</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Central</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Central</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Central_Mailbox_Assignment</targetReference>
            </connector>
            <label>Central</label>
        </rules>
        <rules>
            <name>East</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>East</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>East_Mailbox_Assignment</targetReference>
            </connector>
            <label>East</label>
        </rules>
        <rules>
            <name>West</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>West_Mailbox_Assignment</targetReference>
            </connector>
            <label>West</label>
        </rules>
        <rules>
            <name>Canada_East</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canada East</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Canada_East_Mailbox_Assignment</targetReference>
            </connector>
            <label>Canada East</label>
        </rules>
        <rules>
            <name>Canada_West</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canada West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Canada_West_Mailbox_Assignment</targetReference>
            </connector>
            <label>Canada West</label>
        </rules>
    </decisions>
    <description>Updated to address email template Case Owner displaying incorrect Queue Name.

Initiated by: A Case with an Origin of &quot;Survey&quot; is created.

Runs as: System (all data)

Meant for: Operations. Alerts operations that a Case has been created from a low NPS score and that follow up is required.

Purpose: When a Client Traveler Survey is submitted with an email provided and an NPS score of 1 or 2, a Case is created for follow up. Once this Case record is created, an email message is sent to a shared mailbox (mailbox determined by Account region) to alert the appropriate individuals of the follow up action that is needed.</description>
    <environments>Default</environments>
    <formulas>
        <name>AccountOwnerEmail</name>
        <dataType>String</dataType>
        <expression>IF(
{!Get_Account_Owner_User_Information.Alias} = &apos;DSelect&apos;, {!Get_Account_Field_Information.Account_Owner_Email__c}, {!Get_Account_Owner_User_Information.Email}
)</expression>
    </formulas>
    <formulas>
        <name>CaseRecordLink</name>
        <dataType>String</dataType>
        <expression>{!$Label.SalesforceURL}&amp;&quot;/&quot;&amp;{!$Record.Id}</expression>
    </formulas>
    <interviewLabel>RTF: Client Traveler Survey Case - On Create, After Save {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RTF: Client Traveler Survey Case - On Create, After Save</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>We need to query related Account information in order to use it as a merge field/variable in our email alert.</description>
        <name>Get_Account_Field_Information</name>
        <label>Get Account Field Information</label>
        <locationX>710</locationX>
        <locationY>839</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Account_Owner_User_Information</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>We need to query the User information specific to the Account Owner as the value is not available at runtime, even from the Get Account element. We need Account Owner merge fields in our email text.</description>
        <name>Get_Account_Owner_User_Information</name>
        <label>Get Account Owner User Information</label>
        <locationX>710</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Case_Owner_Information</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account_Field_Information.Owner.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>We need to query the Queue information specific to the Case Owner as the value is not available at runtime, and we need this value for our email text.</description>
        <name>Get_Case_Owner_Information</name>
        <label>Get Case Owner Information</label>
        <locationX>710</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_New_Case_Email_Alert</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>We query record types for the Case object so that we can use the record type ID as a variable, rather than hardcoding the record type ID into the flow.</description>
        <name>Get_Case_Record_Type</name>
        <label>Get Case Record Type</label>
        <locationX>1260</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assess_Case_Record_Type</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Client_Traveler_Survey</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1134</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Origin</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Survey</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>EmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;A recent Client Traveler Survey has generated a low Net Promoter Score (a 0, 1, or 2) which requires action from Operations.&amp;nbsp;Please engage with the traveler within 24 hours and update/close the case module (entering your notes and actions taken) within 72 hours. Send copy to Account Owner and Ops Owner noted below.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Case Number:&amp;nbsp;{!$Record.CaseNumber}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Link to Case:&amp;nbsp;&amp;nbsp;{!CaseRecordLink}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Survey Date:&amp;nbsp;&amp;nbsp;{!$Record.Survey_Date__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Account Name:&amp;nbsp;&amp;nbsp;{!$Record.Account.Name}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Account Email: {!$Record.Account.Account_Owner_Email__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Res Center / Booking Office:&amp;nbsp;{!$Record.Account.Res_Center_Booking_Office__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Account Owner: {!Get_Account_Owner_User_Information.Name}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Ops Owner: {!$Record.Ops_Owner__c}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Case Owner:&amp;nbsp;{!Get_Case_Owner_Information.Name}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;u style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Traveler Responses&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;How was your reservation experience?&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 16px; font-family: sans-serif;&quot;&gt;{!$Record.How_was_your_reservation_experience__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;How likely are you to recommend our services to a colleague?&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-size: 16px; font-family: sans-serif;&quot;&gt;{!$Record.How_likely_to_recommend_services__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Other comments.&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: sans-serif; font-size: 16px;&quot;&gt;{!$Record.Other_comments__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;Contact Name:&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: sans-serif; font-size: 16px;&quot;&gt;{!$Record.Respondent_Name__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: sans-serif; font-size: 16px;&quot;&gt;Contact Email:&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: sans-serif; font-size: 16px;&quot;&gt;{!$Record.Respondent_Email__c}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: rgb(0, 0, 0); font-family: Arial; font-size: 12pt;&quot;&gt;This is an automated email to notify you that your immediate action is required.&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>ErrorEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;An error occurred while trying to send an email response to a traveler who submitted a low NPS score.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Flow: RTF: Client Traveler Survey Case - On Create, After Save&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Error Message: {!$Flow.FaultMessage}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Current Stage: {!$Flow.CurrentStage}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Current Record: {!$Flow.CurrentRecord}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Date: {!$Flow.InterviewStartTime}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;This means that an email alert was not sent to the shared mailbox to alert account managers and director of operations about the new Case. &lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>EmailRecipientMailbox</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>textAccountOwnerEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Get_Account_Owner_User_Information.Email</elementReference>
        </value>
    </variables>
</Flow>
