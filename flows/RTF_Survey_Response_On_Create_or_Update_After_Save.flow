<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>This invocable method maps Survey Questions to the related Case Fields for assignment later on in the flow. For example, the Question &quot;How likely are you to recommend your services to a colleague?&quot; and it&apos;s Response are mapped to the Case question &quot;How likely to recommend services?&quot;.</description>
        <name>Map_Responses_To_Case</name>
        <label>Map Responses To Case</label>
        <locationX>710</locationX>
        <locationY>1637</locationY>
        <actionName>MapSurveyQuestionToCaseInvocableApex</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Get_Case_Record_Type_Id</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>accountId</name>
            <value>
                <elementReference>$Record.Invitation.Account__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>questionResponses</name>
            <value>
                <elementReference>Get_Survey_Question_Responses</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>surveyQuestionList</name>
            <value>
                <elementReference>Get_SurveyQuestion_Records</elementReference>
            </value>
        </inputParameters>
        <nameSegment>MapSurveyQuestionToCaseInvocableApex</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Sends an email with English subject and English email body.</description>
        <name>Send_English_Traveler_Email</name>
        <label>Send English Traveler Email</label>
        <locationX>974</locationX>
        <locationY>3077</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.Respondent_Email__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Direct Travel Client Survey</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>EnglishTravelerEmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Invitation.Account__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Error_Email</name>
        <label>Send Error Email</label>
        <locationX>4010</locationX>
        <locationY>431</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>jhintz@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Flow Error: Create Follow Up NPS Case and Email Traveler</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>ErrorEmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <actionCalls>
        <description>Sends an email with French Canadian subject and French Canadian email body.</description>
        <name>Send_French_Canadian_Traveler_Email</name>
        <label>Send French Canadian Traveler Email</label>
        <locationX>446</locationX>
        <locationY>3077</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.Respondent_Email__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>noreply@dt.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>FrenchCanadianEmailSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>FrenchCATravelerEmailBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>$Record.Invitation.Account__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>logEmailOnSend</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>We add 1 to our response criteria record counter, because an email provided for the question: &quot;If you would like us to contact you, please provide your  email address below:&quot; meets our criteria for when to create a case.</description>
        <name>Add_1_to_Response_Criteria_Record_Count</name>
        <label>Add 1 to Response Criteria Record Count</label>
        <locationX>2316</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>ResponseCriteriaRecordCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assess_for_Low_NPS_Score_and_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>We have assigned the values to all Survey Question Response fields in our previous iteration of Survey Question Response records, however, there are additional field values that need to be assigned/set for our Case record variable. Those values are assigned here.</description>
        <name>Assign_Additional_Values_to_Case</name>
        <label>Assign Additional Values to Case</label>
        <locationX>710</locationX>
        <locationY>2753</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Invitation.Account__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Account_Owner__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Invitation.Account__r.Owner.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The following low net promoter score has been opened for this account. Please contact the customer within 24 hours and close the case within 72 hours.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Ops_Owner__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Invitation.Account__r.Ops_Owner__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Origin</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Survey</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>High</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Record_Type_Id.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Res_Center_Booking_Office__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Invitation.Account__r.Res_Center_Booking_Office__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.How_was_your_reservation_experience__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.How_was_your_reservation_experience__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.How_likely_to_recommend_services__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.How_likely_to_recommend_services__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Other_comments__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.Other_comments__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Respondent_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.Respondent_Name__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Respondent_Email__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.Respondent_Email__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.SuppliedEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.SuppliedEmail</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Received_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Survey_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Map_Responses_To_Case.outputCase.Subject</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Canada East Queue as Owner for Case record that will be created.</description>
        <name>Assign_Canada_East_Queue_for_Case_Owner</name>
        <label>Assign Canada East Queue for Case Owner</label>
        <locationX>842</locationX>
        <locationY>2561</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CanadaEastQueue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Additional_Values_to_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Id of Canada East to CanadaEastQueue text variable.</description>
        <name>Assign_Canada_East_Queue_to_Canada_East_Queue_Variable</name>
        <label>Assign Canada East Queue to Canada East Queue Variable</label>
        <locationX>1590</locationX>
        <locationY>2177</locationY>
        <assignmentItems>
            <assignToReference>CanadaEastQueue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_through_Queues.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Queues</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Canada West Queue as Owner for Case record that will be created.</description>
        <name>Assign_Canada_West_Queue_for_Case_Owner</name>
        <label>Assign Canada West Queue for Case Owner</label>
        <locationX>1106</locationX>
        <locationY>2561</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CanadaWestQueue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Additional_Values_to_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Id of Canada West to CanadaWestQueue text variable.</description>
        <name>Assign_Canada_West_Queue_to_Canada_West_Queue_Variable</name>
        <label>Assign Canada West Queue to Canada West Queue Variable</label>
        <locationX>1854</locationX>
        <locationY>2177</locationY>
        <assignmentItems>
            <assignToReference>CanadaWestQueue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_through_Queues.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Queues</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Central Queue as Owner for Case record that will be created.</description>
        <name>Assign_Central_Queue_for_Case_Owner</name>
        <label>Assign Central Queue for Case Owner</label>
        <locationX>578</locationX>
        <locationY>2561</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CentralQueue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Additional_Values_to_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Id of Central Queue to CentralQueue text variable.</description>
        <name>Assign_Central_Queue_to_Central_Queue_Variable</name>
        <label>Assign Central Queue to Central Queue Variable</label>
        <locationX>1326</locationX>
        <locationY>2177</locationY>
        <assignmentItems>
            <assignToReference>CentralQueue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_through_Queues.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Queues</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns East Queue as Owner for Case record that will be created.</description>
        <name>Assign_East_Queue_for_Case_Owner</name>
        <label>Assign East Queue for Case Owner</label>
        <locationX>50</locationX>
        <locationY>2561</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EastQueue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Additional_Values_to_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Id of East Queue to EastQueue text variable.</description>
        <name>Assign_East_Queue_to_East_Queue_Variable</name>
        <label>Assign East Queue to East Queue Variable</label>
        <locationX>798</locationX>
        <locationY>2177</locationY>
        <assignmentItems>
            <assignToReference>EastQueue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_through_Queues.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Queues</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns West Queue as Owner for Case record that will be created.</description>
        <name>Assign_West_Queue_for_Case_Owner</name>
        <label>Assign West Queue for Case Owner</label>
        <locationX>314</locationX>
        <locationY>2561</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>WestQueue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Additional_Values_to_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns Id of West Queue to WestQueue text variable.</description>
        <name>Assign_West_Queue_to_West_Queue_Variable</name>
        <label>Assign West Queue to West Queue Variable</label>
        <locationX>1062</locationX>
        <locationY>2177</locationY>
        <assignmentItems>
            <assignToReference>WestQueue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_through_Queues.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Queues</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>We set the value of the NPS Score on the Survey Invitation to match the value given by the respondent.</description>
        <name>Update_NPS_on_SurveyInvitation</name>
        <label>Update NPS on SurveyInvitation</label>
        <locationX>1788</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>SurveyInvitationNPSScore</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Assess_for_Low_NPS_Score_and_Email.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assess_for_Low_NPS_Score_and_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>We set the value of the NPS Score on the Survey Invitation to match the value given by the respondent.</description>
        <name>Update_NPS_on_SurveyInvitation_Low_Score</name>
        <label>Update NPS on SurveyInvitation Low Score</label>
        <locationX>2052</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>SurveyInvitationNPSScore</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Assess_for_Low_NPS_Score_and_Email.NumberValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Add_1_to_Response_Criteria_Record_Count</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Evaluates the Region for the Account record related to the Survey Invitation for this Survey Response.</description>
        <name>Assess_Account_Region_for_Case_Queue_Assignment</name>
        <label>Assess Account Region for Case Queue Assignment</label>
        <locationX>710</locationX>
        <locationY>2453</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>East</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Invitation.Account__r.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>East</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_East_Queue_for_Case_Owner</targetReference>
            </connector>
            <label>East</label>
        </rules>
        <rules>
            <name>West</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Invitation.Account__r.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_West_Queue_for_Case_Owner</targetReference>
            </connector>
            <label>West</label>
        </rules>
        <rules>
            <name>Central</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Invitation.Account__r.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Central</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Central_Queue_for_Case_Owner</targetReference>
            </connector>
            <label>Central</label>
        </rules>
        <rules>
            <name>Canada_East</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Invitation.Account__r.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canada East</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Canada_East_Queue_for_Case_Owner</targetReference>
            </connector>
            <label>Canada East</label>
        </rules>
        <rules>
            <name>Canada_West</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Invitation.Account__r.Region__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canada West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Canada_West_Queue_for_Case_Owner</targetReference>
            </connector>
            <label>Canada West</label>
        </rules>
    </decisions>
    <decisions>
        <description>Our record counter should be equal to 2 if we have a low NPS score and an email has been provided. Therefore, we assess if the counter value is equal to 2. All other values take the default outcome path as they are irrelevant for moving forward with creating a case.</description>
        <name>Assess_if_Response_Record_Count_is_2</name>
        <label>Assess if Response Record Count is 2</label>
        <locationX>1700</locationX>
        <locationY>1421</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Record_Count_is_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ResponseCriteriaRecordCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_SurveyQuestion_Records</targetReference>
            </connector>
            <label>Record Count is 2</label>
        </rules>
    </decisions>
    <decisions>
        <description>Evaluates if the current record represents the NPS question, and if so, if the response matches our criteria. Also evaluates if the current record represents the Respondent Email question, and if an email has been provided as a response.</description>
        <name>Assess_NPS_Score_Value_and_if_Respondent_Email_is_Present</name>
        <label>Assess NPS Score Value and if Respondent Email is Present</label>
        <locationX>2184</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>Assess_for_Low_NPS_Score_and_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>SurveyQuestion is not NPS</defaultConnectorLabel>
        <rules>
            <name>SurveyQuestion_is_NPS</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Assess_for_Low_NPS_Score_and_Email.Question.QuestionName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>How likely are you to recommend our services to a colleague?</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Assess_for_Low_NPS_Score_and_Email.NumberValue</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_NPS_on_SurveyInvitation</targetReference>
            </connector>
            <label>SurveyQuestion is NPS</label>
        </rules>
        <rules>
            <name>SurveyQuestion_is_NPS_Response_is_0_1_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Assess_for_Low_NPS_Score_and_Email.Question.QuestionName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>How likely are you to recommend our services to a colleague?</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Assess_for_Low_NPS_Score_and_Email.NumberValue</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_NPS_on_SurveyInvitation_Low_Score</targetReference>
            </connector>
            <label>SurveyQuestion is NPS &amp; Response is 0,1,2</label>
        </rules>
        <rules>
            <name>Email_Provided</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Assess_for_Low_NPS_Score_and_Email.Question.QuestionName</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>email address</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Assess_for_Low_NPS_Score_and_Email.ResponseShortText</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_1_to_Response_Criteria_Record_Count</targetReference>
            </connector>
            <label>Email Provided</label>
        </rules>
    </decisions>
    <decisions>
        <description>Evaluates the language of the Survey Invitation for this response by looking at the URL parameters from the link. A URL containing Survey Site &quot;ENGSurvey&quot; is English, and a URL containing Survey Site &quot;EnqueteFRCA&quot; is French Canadian.</description>
        <name>Assess_Survey_Language_from_Survey_Invitation_Link</name>
        <label>Assess Survey Language from Survey Invitation Link</label>
        <locationX>710</locationX>
        <locationY>2969</locationY>
        <defaultConnector>
            <targetReference>Send_English_Traveler_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Link sent in English</defaultConnectorLabel>
        <rules>
            <name>Link_sent_in_French_Canadian</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SurveyInvitationLink</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>EnqueteFRCA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_French_Canadian_Traveler_Email</targetReference>
            </connector>
            <label>Link sent in French Canadian</label>
        </rules>
    </decisions>
    <decisions>
        <description>Evaluates whether or not the triggering survey response record is related to the Client Traveler Survey record based on the results of the Get Survey query.</description>
        <name>Check_for_Survey_Collection_Record_Count</name>
        <label>Check for Survey Collection Record Count</label>
        <locationX>2723</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Collection is null</defaultConnectorLabel>
        <rules>
            <name>Collection_Contains_1_or_More_Records</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Survey</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Survey_Question_Responses</targetReference>
            </connector>
            <label>Collection Contains 1 or More Records</label>
        </rules>
    </decisions>
    <decisions>
        <description>Assigns Queue record to a variable based on its developer name.</description>
        <name>Evaluate_Queue_Name</name>
        <label>Evaluate Queue Name</label>
        <locationX>1458</locationX>
        <locationY>2069</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>East_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Queues.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>East</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_East_Queue_to_East_Queue_Variable</targetReference>
            </connector>
            <label>East Queue</label>
        </rules>
        <rules>
            <name>West_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Queues.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_West_Queue_to_West_Queue_Variable</targetReference>
            </connector>
            <label>West Queue</label>
        </rules>
        <rules>
            <name>Central_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Queues.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Central</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Central_Queue_to_Central_Queue_Variable</targetReference>
            </connector>
            <label>Central Queue</label>
        </rules>
        <rules>
            <name>Canada_East_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Queues.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canada_East</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Canada_East_Queue_to_Canada_East_Queue_Variable</targetReference>
            </connector>
            <label>Canada East Queue</label>
        </rules>
        <rules>
            <name>Canada_West_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_through_Queues.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canada_West</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Canada_West_Queue_to_Canada_West_Queue_Variable</targetReference>
            </connector>
            <label>Canada West Queue</label>
        </rules>
    </decisions>
    <description>Initiated by: A Survey Response record updating to the &quot;Completed&quot; Status.

Runs as: System (all data)

Meant for: Operations. Allows follow up to low scoring NPS survey responses. A score of 1 or 2 is considered low.

Purpose: When a Client Traveler Survey is submitted with an email provided and an NPS score of 1 or 2, a Case is created that stores survey response information and the related Account&apos;s information. Respondent contact information is captured so that the operations director/account manager can follow up with the respondent. After a Case is created, an email is sent to the Traveler letting them know that someone from Direct Travel will be in touch. This email is logged to the related Account record.

Updated with logic to assign Case to a queue that varies by Account region. Updated to include an English AND French Canadian version of the Traveler Email.

Updated to include &quot;contains&quot; logic for email address question.</description>
    <environments>Default</environments>
    <formulas>
        <name>CaseSubjectFormula</name>
        <dataType>String</dataType>
        <expression>{!$Record.Invitation.Account__r.Name} &amp; &quot; &quot; &amp; &quot;Low Net Promoter Score&quot;</expression>
    </formulas>
    <formulas>
        <name>formulaEmailQuestionText</name>
        <dataType>String</dataType>
        <expression>&quot;If you would like us to contact you, please provide your&quot; &amp; &quot;  &quot; &amp; &quot;email address below:&quot;</expression>
    </formulas>
    <interviewLabel>RTF: Survey Response - On Create or Update, After Save {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RTF: Survey Response - On Create or Update, After Save</label>
    <loops>
        <description>Iterates over each Survey Question Response record to assess whether or not the current record meets our criteria for creating a Case: an NPS Score less than or equal to 2, and a provided respondent email address.</description>
        <name>Assess_for_Low_NPS_Score_and_Email</name>
        <label>Assess for Low NPS Score and Email</label>
        <locationX>1700</locationX>
        <locationY>755</locationY>
        <collectionReference>Get_Survey_Question_Responses</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assess_NPS_Score_Value_and_if_Respondent_Email_is_Present</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Survey_Invitation_NPS_Score</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Iterates over Queue collection to assign each value to a corresponding variable for assignment later on in the flow.</description>
        <name>Loop_through_Queues</name>
        <label>Loop through Queues</label>
        <locationX>710</locationX>
        <locationY>1961</locationY>
        <collectionReference>Get_Queues</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Evaluate_Queue_Name</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assess_Account_Region_for_Case_Queue_Assignment</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates a new Case record with all of the values we assigned earlier in the flow.</description>
        <name>Create_Case</name>
        <label>Create Case</label>
        <locationX>710</locationX>
        <locationY>2861</locationY>
        <connector>
            <targetReference>Assess_Survey_Language_from_Survey_Invitation_Link</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <inputReference>CaseRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <description>Returns the Id for the Client Traveler Survey Case record type. This allows us to avoid hard coding a Record Type Id into our Case RecordTypeId assignment.</description>
        <name>Get_Case_Record_Type_Id</name>
        <label>Get Case Record Type Id</label>
        <locationX>710</locationX>
        <locationY>1745</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Queues</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Client_Traveler_Survey</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Returns Queues that will be used for Case Ownership assignment.</description>
        <name>Get_Queues</name>
        <label>Get Queues</label>
        <locationX>710</locationX>
        <locationY>1853</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_Queues</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3 OR 4 OR 5 OR 6)</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>East</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>West</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Central</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canada_East</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Canada_West</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Group</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Returns the &quot;Client Traveler Survey&quot; Survey record Id.</description>
        <name>Get_Survey</name>
        <label>Get Survey</label>
        <locationX>2723</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_for_Survey_Collection_Record_Count</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Client_Traveler_Survey</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SurveyId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Survey</object>
        <queriedFields>Id</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Queries the Survey Invitation object so that we can use the derived value of the Survey Invitation Link field later on in the flow, which isn&apos;t supported in the $Record variable.</description>
        <name>Get_Survey_Invitation</name>
        <label>Get Survey Invitation</label>
        <locationX>1700</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assess_for_Low_NPS_Score_and_Email</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.InvitationId</elementReference>
            </value>
        </filters>
        <object>SurveyInvitation</object>
        <outputAssignments>
            <assignToReference>SurveyInvitationID</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>SurveyInvitationLink</assignToReference>
            <field>InvitationLink</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>SurveyInvitationNPSScore</assignToReference>
            <field>NPS_Score__c</field>
        </outputAssignments>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordLookups>
        <description>Returns all Survey Question Responses related to our triggering Survey Response record.</description>
        <name>Get_Survey_Question_Responses</name>
        <label>Get Survey Question Responses</label>
        <locationX>1700</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Survey_Invitation</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ResponseId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SurveyQuestionResponse</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Survey Questions are referenced in the invocable code element of this flow.</description>
        <name>Get_SurveyQuestion_Records</name>
        <label>Get SurveyQuestion Records</label>
        <locationX>710</locationX>
        <locationY>1529</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Map_Responses_To_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SurveyVersionId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SurveyVersionId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SurveyQuestion</object>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Updates the Survey Invitation record related to the triggering Survey Response record so that the NPS Score field is populated on the Survey Invitation. Updating this field with the response value allows us to report on Survey Invitations with Promoter, Passive, and Demoter scores.</description>
        <name>Update_Survey_Invitation_NPS_Score</name>
        <label>Update Survey Invitation NPS Score</label>
        <locationX>1700</locationX>
        <locationY>1313</locationY>
        <connector>
            <targetReference>Assess_if_Response_Record_Count_is_2</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Send_Error_Email</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SurveyInvitationID</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>NPS_Score__c</field>
            <value>
                <elementReference>SurveyInvitationNPSScore</elementReference>
            </value>
        </inputAssignments>
        <object>SurveyInvitation</object>
    </recordUpdates>
    <start>
        <locationX>2597</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Survey</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <object>SurveyResponse</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <textTemplates>
        <description>English language version of traveler email.</description>
        <name>EnglishTravelerEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;Thank you for completing the Direct Travel Client survey.&amp;nbsp;A representative from Direct Travel will be in contact with you.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;Your opinion matters!&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;Sincerely,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;Direct Travel&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>ErrorEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;An error occurred with the RTF_Survey_Response_On_Create_or_Update_After_Save flow.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Fault Message: {!$Flow.FaultMessage}{!$Flow.FaultMessage}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Current Stage: {!$Flow.CurrentStage}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Current Record: {!$Flow.CurrentRecord}{!$Flow.CurrentRecord}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Time: {!$Flow.InterviewStartTime}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Note that because of this error, a Case may not have been created for a low NPS score, and an email message was not sent to the traveler regarding follow up.&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <description>Stores the text for the French Canadian email subject.</description>
        <name>FrenchCanadianEmailSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Questionnaire à l’intention des clients des Services Direct Travel</text>
    </textTemplates>
    <textTemplates>
        <description>French Canadian language version of traveler email.</description>
        <name>FrenchCATravelerEmailBody</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;Nous vous remercions d’avoir répondu au questionnaire destiné aux clients des Services Direct&amp;nbsp;Travel. Un représentant de l’entreprise prendra contact avec vous incessamment.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;Votre avis compte pour nous!&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;Cordialement,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;Les services Direct&amp;nbsp;Travel&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <description>Stores ID of Canada East Queue.</description>
        <name>CanadaEastQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores ID of Canada West Queue.</description>
        <name>CanadaWestQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CaseRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <description>Stores ID of Central Queue.</description>
        <name>CentralQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>SurveyQuestionResponse</objectType>
    </variables>
    <variables>
        <name>currentItemFromSourceCollection_0</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>SurveyQuestionResponse</objectType>
    </variables>
    <variables>
        <description>Stores ID of East Queue.</description>
        <name>EastQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>EmailQuestionText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>If you would like us to contact you, please provide your  email address below:</stringValue>
        </value>
    </variables>
    <variables>
        <name>ResponseCriteriaRecordCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <description>Stores the ID of the Survey Invitation object from our Survey Invitation query.</description>
        <name>SurveyInvitationID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the Survey Invitation Link as text from the Survey Invitation record we query.</description>
        <name>SurveyInvitationLink</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SurveyInvitationNPSScore</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>SurveyRecordCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <description>Stores ID of West Queue.</description>
        <name>WestQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
